<form id="editForm-{{product._id}}" action="http://localhost:8080/products/{{product._id}}" enctype="multipart/form-data">
    <p>Product: </p> 
    <input type="text" name="title" value="{{product.title}}" required>
    <p>What is it? </p>
    <input type="text" name="description" value="{{product.description}}">
    <p>Code: </p>
    <input type="text" name="code" value="{{product.code}}" required>
    <p>Price: </p>
    <input type="number" name="price" value="{{product.price}}" required>
    <p>Status: </p>
    <input id="hiddenStatus" type="hidden" name="status" value="false">
    <input id="statusCheckbox" type="checkbox" name="status" value="true" {{#if product.status}}checked{{/if}}>

    <p>Available stock: </p>
    <input type="number" name="stock" value="{{product.stock}}" required>
    <p>Category: </p>
    <select name="category">
        <option value="cake" {{#if product.category}} {{#ifEquals product.category "cake"}}selected{{/ifEquals}} {{/if}}>Cake</option>
        <option value="cookie" {{#if product.category}} {{#ifEquals product.category "cookie"}}selected{{/ifEquals}} {{/if}}>Cookie</option>
        <option value="other" {{#if product.category}} {{#ifEquals product.category "other"}}selected{{/ifEquals}} {{/if}}>Other</option>
    </select>
    <br><br>
    <input type="file" name="image">
    <br><br>
    <img src="{{product.image}}" alt="{{product.title}}" width="100" height="100">
    <br><br>
    <button onclick="submitEdit(`{{product._id}}`)" type="button">Save</button>
</form>

<script>
    document.addEventListener('DOMContentLoaded', (event) => {
        const stockInput = document.querySelector('input[name="stock"]');
        const statusCheckbox = document.querySelector('input[name="status"][type="checkbox"]');

        if (stockInput && statusCheckbox) {
            stockInput.addEventListener('input', () => {
                if (parseInt(stockInput.value) === 0) {
                    statusCheckbox.checked = false;
                } else {
                    statusCheckbox.checked = true;
                }
            });

            if (parseInt(stockInput.value) === 0) {
                statusCheckbox.checked = false;
            } else {
                statusCheckbox.checked = true;
            }
        }
    });
</script>

{{!-- To handle status check --}}
<script>
document.getElementById('editForm-{{product._id}}').addEventListener('submit', function(event) {
    const statusCheckbox = document.getElementById('statusCheckbox');
    const hiddenStatus = document.getElementById('hiddenStatus');
    const originalStatus = hiddenStatus.value; 

    const newStatus = statusCheckbox.checked ? 'true' : 'false';
    if (originalStatus === newStatus) {
        event.preventDefault(); 
        return;
    }

    hiddenStatus.value = newStatus;
});

</script>

{{!-- To update MongoDB with the edits --}}
<script>
    async function submitEdit(productId) {
        const form = document.getElementById(`editForm-${productId}`);
        const formData = new FormData(form);

        try {
            const response = await fetch(`/products/edit/${productId}`, {
                method: "PUT",
                body: formData,
            });

            if (response.ok) {
                alert("Product updated successfully!");
                window.location.href = `/products/${productId}`;
            } else {
                const error = await response.json();
                alert(`Failed to update product: ${error.message}`);
            }
        } catch (error) {
            console.error("Error updating product:", error);
            alert("An error occurred while updating the product. Please try again.");
        }
    }
</script>